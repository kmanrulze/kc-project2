# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - Feature

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

jobs:
- job: Build
  steps:
  - script: echo Started Build
    condition: always()

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'Free Trial(92f11ea8-1c99-4c20-a2a9-6a3aed18291d)'
      KeyVaultName: 'DBnD-KeyVault'
      SecretsFilter: Webhook
  - task: ado-discord-webhook@1
    inputs:
      channelId: '639490810336903202'
      webhookKey: '$(Webhook)'
      name: 'Azure Devops'
      messageType: embeds
      embeds: |
          [{
            "title": "Feature Pipeline Build",
            "description": "Build Pipeline started. You better hope this works...",
            "url": "https://discordapp.com",
            "color": 2247803,
            "thumbnail": 
            {
              "url": "https://static.thenounproject.com/png/266379-200.png"
            },
            "author": 
            {
              "name": "Azure Devops",
              "url": "https://dev.azure.com/kcguzman/Project-2",
              "icon_url": "http://www.mattruma.com/wp-content/uploads/2019/04/528389819366_e7a0672f0480b3e98d21_512.png"
            }
          }]
    ###Builds
#  - script: dotnet build --configuration $(buildConfiguration)
#    displayName: 'dotnet build $(buildConfiguration)'
#    workingDirectory: './DatabasesNDragons'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      workingDirectory: './DatabasesNDragons'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      publishWebProjects: true
      workingDirectory: './DatabasesNDragons'
      arguments: --configuration $(buildConfiguration)
      zipAfterPublish: true

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'

- job: Test
  dependsOn: Build
  condition: succeeded()
  steps:
  - script: echo Started CLI

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)/DBnDFeed'

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'Free Trial(92f11ea8-1c99-4c20-a2a9-6a3aed18291d)'
      KeyVaultName: 'DBnD-KeyVault'
      SecretsFilter: Webhook

  - task: ado-discord-webhook@1
    inputs:
      channelId: '639490810336903202'
      webhookKey: '$(Webhook)'
      name: 'Azure Devops'
      messageType: embeds
      embeds: |
          [{
            "title": "Feature Pipeline CLI Tests",
            "description": "Attempting to run CLI Tests...",
            "url": "https://discordapp.com",
            "color": 2247803,
            "thumbnail": 
            {
              "url": "https://static.thenounproject.com/png/266379-200.png"
            },
            "author": 
            {
              "name": "Azure Devops",
              "url": "https://dev.azure.com/kcguzman/Project-2",
              "icon_url": "http://www.mattruma.com/wp-content/uploads/2019/04/528389819366_e7a0672f0480b3e98d21_512.png"
            }
          }]
    
  - task: DotNetCoreCLI@2
    continueOnError: true
    inputs:
      command: 'test'
      projects: '**/*Test/*.csproj'
      workingDirectory: './DatabasesNDragons'
      arguments: '-c $(buildConfiguration) --collect "XPlat Code Coverage"'
      
- job: SonarCloud
  dependsOn: Build
  condition: succeeded()
  steps:
  - script: echo Started SonarCloud Publish
  - task: ado-discord-webhook@1
    inputs:
      channelId: '639490810336903202'
      webhookKey: '$(Webhook)'
      name: 'Azure Devops'
      messageType: embeds
      embeds: |
          [{
            "title": "Feature SonarCloud Analysis",
            "description": "Build and CLI Tests complete. Attempting to analyze with SonarCloud...",
            "url": "https://discordapp.com",
            "color": 2247803,
            "thumbnail": 
            {
              "url": "https://static.thenounproject.com/png/266379-200.png"
            },
            "author": 
            {
              "name": "Azure Devops",
              "url": "https://dev.azure.com/kcguzman/Project-2",
              "icon_url": "http://www.mattruma.com/wp-content/uploads/2019/04/528389819366_e7a0672f0480b3e98d21_512.png"
            }
          }]
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'DBnD'
      organization: '1909-sep30-net'
      scannerMode: 'MSBuild'
      projectKey: 'KSJ-DBnD'
      projectName: 'DBnD'
      extraProperties: |
        sonar.exclusions=**/lib/**
        sonar.exclusions=**/Migrations/**

###Publishes to SonarCloud
  - task: SonarCloudPublish@1
    displayName: Publish SonarCloud quality gate result
    inputs:
      pollingTimeoutSec: '300'

  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- job: PipeSucceed
  dependsOn: SonarCloud
  condition: succeeded()
  steps:
  - script: echo Pipe success!

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'Free Trial(92f11ea8-1c99-4c20-a2a9-6a3aed18291d)'
      KeyVaultName: 'DBnD-KeyVault'
      SecretsFilter: Webhook
  - task: ado-discord-webhook@1
    inputs:
      channelId: '639490810336903202'
      webhookKey: '$(Webhook)'
      name: 'Azure Devops'
      messageType: embeds
      embeds: |
          [{
            "title": "Feature Build and Analysis Success!",
            "description": "Build and Analysis Successful! You can give yourself a pat on the back and feel good about yourself!",
            "url": "https://discordapp.com",
            "color": 2247803,
            "thumbnail": 
            {
              "url": "https://static.thenounproject.com/png/266379-200.png"
            },
            "author": 
            {
              "name": "Azure Devops",
              "url": "https://dev.azure.com/kcguzman/Project-2",
              "icon_url": "http://www.mattruma.com/wp-content/uploads/2019/04/528389819366_e7a0672f0480b3e98d21_512.png"
            },
            "fields": 
            [{
              "name": "SonarCloud Metrics Link",
              "value": "https://sonarcloud.io/dashboard?id=KSJ-DBnD"
                  }]
          }]

    
- job: PipeFailed
  dependsOn: SonarCloud
  condition: failed()
  steps:
  - script: echo Pipe failiure!
  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'Free Trial(92f11ea8-1c99-4c20-a2a9-6a3aed18291d)'
      KeyVaultName: 'DBnD-KeyVault'
      SecretsFilter: Webhook
  - task: ado-discord-webhook@1
    inputs:
      channelId: '639490810336903202'
      webhookKey: '$(Webhook)'
      name: 'Azure Devops'
      messageType: embeds
      embeds: |
          [{
            "title": "Feature Pipeline Build and Analysis Failed",
            "description": "Your build was bad and you should feel bad! Things failed!",
            "url": "https://discordapp.com",
            "color": 2247803,
            "thumbnail": 
            {
              "url": "https://static.thenounproject.com/png/266379-200.png"
            },
            "author": 
            {
              "name": "Azure Devops",
              "url": "https://dev.azure.com/kcguzman/Project-2",
              "icon_url": "http://www.mattruma.com/wp-content/uploads/2019/04/528389819366_e7a0672f0480b3e98d21_512.png"
            }
          }]