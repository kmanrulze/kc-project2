// <auto-generated />
using System;
using Dbnd.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Dbnd.Data.Migrations
{
    [DbContext(typeof(DbndContext))]
    [Migration("20191029035000_AddAllEntitiesForReal")]
    partial class AddAllEntitiesForReal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Dbnd.Data.Entities.Character", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CharacterFirstName")
                        .HasColumnType("text");

                    b.Property<string>("CharacterLastName")
                        .HasColumnType("text");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.HasKey("CharacterId");

                    b.HasIndex("ClientId");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("Dbnd.Data.Entities.CharacterGameXRef", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.HasKey("GameId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("CharacterGameXRef");
                });

            modelBuilder.Entity("Dbnd.Data.Entities.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(75)")
                        .HasMaxLength(75);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("character varying(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("character varying(75)")
                        .HasMaxLength(75);

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Dbnd.Data.Entities.DungeonMaster", b =>
                {
                    b.Property<Guid>("DungeonMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.HasKey("DungeonMasterId");

                    b.HasIndex("ClientId");

                    b.ToTable("DungeonMaster");
                });

            modelBuilder.Entity("Dbnd.Data.Entities.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DungeonMasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("GameName")
                        .HasColumnType("text");

                    b.HasKey("GameId");

                    b.HasIndex("DungeonMasterId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("Dbnd.Data.Entities.Character", b =>
                {
                    b.HasOne("Dbnd.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dbnd.Data.Entities.CharacterGameXRef", b =>
                {
                    b.HasOne("Dbnd.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dbnd.Data.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dbnd.Data.Entities.DungeonMaster", b =>
                {
                    b.HasOne("Dbnd.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dbnd.Data.Entities.Game", b =>
                {
                    b.HasOne("Dbnd.Data.Entities.DungeonMaster", "DungeonMaster")
                        .WithMany()
                        .HasForeignKey("DungeonMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
